------------------

Aterrar:
1: Request : serialize(Avião) -> pede para aterrar ; type='landing request'
2: Query-IF : serialize((Lista de Pistas disponíveis, Avião)) -> pede gare mais próxima da pista para o avião ; type='landing request'
3: Inform: serialize(Pista, Gare, Aviao) -> informa gare e pista escolhidas para atterar e estacionar ; type='available station'
3.5 (NOVA) (TControlo->GGares): serialize(idGare) -> confirmar ao gestor de gares que a pista estava de facto livre e pode reservar gare ; type='confirm pending arrival'
4: Inform: serialize((Pista, Gare)) -> informa pista para aterrar e gare de destino ; type='confirm landing'
5: Inform: idAvião (jid) -> avisar que ainda esta a espera ; type='still waiting'
6: Inform: idAvião (jid) -> avisar que saiu da pista ; type='landed'

Descolar:
6: Request : idAvião (jid) -> pedir para descolar ; type='takeoff request'
7: Query-IF : serialize(Posição,Aviao) -> posição da gare para escolher pista mais próxima ; type='takeoff request'
8: Inform : serialize(Posição, Aviao) -> posição da pista + id avião ; type='available airstrip'
9: Inform: serialize(Posição) -> posição da pista ; type='available airstrip'
10: Inform: idAvião (jid) -> avisar que descolou ; type='took off'

Fila cheia
1: Request : serialize(Avião) -> pede para aterrar ; type='landing request'
2: Refuse  : serialize() -> informa que a fila está cheia ; -


Aviao ja n esta a espera:
4: Inform: serialize((Pista, Gare)) -> informa pista para aterrar e gare de destino ; type='confirm landing'
5: -- (sem resposta)
6: Inform: serialize(station.id) -> informa que aviao ja nao vai ocupar gare; type='cancel arrival'

------------------